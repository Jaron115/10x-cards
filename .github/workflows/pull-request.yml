name: Pull Request CI

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v5
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 7

  e2e-test:
    name: E2E Tests
    needs: lint
    runs-on: ubuntu-latest
    environment: integration

    env:
      CI: true
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      E2E_USERNAME_ID: ${{ secrets.E2E_USERNAME_ID }}
      E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
      E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install chromium --with-deps

      - name: Create .env file for Astro
        run: |
          echo "SUPABASE_URL=${SUPABASE_URL}" >> .env
          echo "SUPABASE_KEY=${SUPABASE_KEY}" >> .env
          echo "SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}" >> .env
          echo "E2E_USERNAME_ID=${E2E_USERNAME_ID}" >> .env
          echo "E2E_USERNAME=${E2E_USERNAME}" >> .env
          echo "E2E_PASSWORD=${E2E_PASSWORD}" >> .env

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload E2E test report
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

      - name: Upload E2E test results
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: e2e-test-results
          path: test-results/
          retention-days: 7

  status-comment:
    name: Post Status Comment
    needs: [lint, unit-test, e2e-test]
    if: success() && github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Download unit test coverage
        uses: actions/download-artifact@v6
        with:
          name: unit-test-coverage
          path: coverage/

      - name: Post success comment
        uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            // Read coverage summary if available
            let coverageInfo = '';
            try {
              const coverageSummary = JSON.parse(
                fs.readFileSync('coverage/coverage-final.json', 'utf8')
              );
              coverageInfo = '\n\n### Coverage Report\n\nUnit test coverage data collected âœ…';
            } catch (error) {
              coverageInfo = '\n\n### Coverage Report\n\nCoverage data not available';
            }

            const message = `## âœ… All Checks Passed

            All CI checks have completed successfully:

            - âœ… **Linting** - Code quality checks passed
            - âœ… **Unit Tests** - All unit tests passed
            - âœ… **E2E Tests** - All end-to-end tests passed
            ${coverageInfo}

            This pull request is ready for review! ðŸš€`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
